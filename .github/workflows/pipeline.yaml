name: dotnet-build

on: [push, workflow_dispatch]

jobs:
  
  job1:
    runs-on: ubuntu-latest
    outputs:
      example_output: ${{ steps.example_step.outputs.example }}

    steps:
      - uses: actions/checkout@v4

      - name: Set example output
        id: example_step
        run: echo "::set-output name=example::true"

  job2:
    if: ${{ needs.job1.outputs.example_output == true }}
    runs-on: ubuntu-latest
    needs: job1
    steps:
      - name: Checkout code
        uses: actions/checkout@v2


    #    uses: mitzenjeremywoo/githubaction_work/.github/workflows/dotnet-workflow.yaml@feat/template-resable-workflow
    # uses: mitzenjeremywoo/dotnet-action-template/.github/workflows/build.yaml@main
    # with: 
    #    targetProjectPath: src/ConsoleApp1
    #    dockerContext: src/ConsoleApp1/ConsoleApp1
    #    publishNuget: true
           
  # containerize:
  #   uses: mitzenjeremywoo/dotnet-action-template/.github/workflows/containerizedapp.yaml@main
  #   with: 
  #      dockerContext: src/ConsoleApp1/ConsoleApp1

  #   env:
  #     REGISTRY: ghcr.io
  #     IMAGE_NAME: ${{ github.repository }}

  #   needs: ['build']

  #   runs-on: ubuntu-latest
  #   permissions:
  #     packages: write
  #     contents: read
  #     attestations: write
  #     id-token: write

  #   steps:
  #     - uses: actions/checkout@v4

  #     - uses: actions/download-artifact@v4
  #       with:
  #         name: buildArtifact

  #     - name: Display structure of downloaded files
  #       run: ls -R

  #     - name: build
  #       run: | 
  #           cd ${{ github.workspace }}/${{ inputs.targetProjectPath }}
  #           ls -al -R 

  #     ## login to the registry 
  #     - name: Log in to the Container registry
  #       uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
  #       with:
  #         registry: ${{ env.REGISTRY }}
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.GITHUB_TOKEN }}

  #     - name: Extract metadata (tags, labels) for Docker
  #       id: meta
  #       uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
  #       with:
  #         images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

  #     - name: Build and push Docker image
  #       id: push
  #       uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
  #       with:
  #         context: src/ConsoleApp1/ConsoleApp1
  #         push: true
  #         tags: ${{ steps.meta.outputs.tags }}
  #         labels: ${{ steps.meta.outputs.labels }}

  #     - name: Generate artifact attestation
  #       uses: actions/attest-build-provenance@v1
  #       with:
  #         subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
  #         subject-digest: ${{ steps.push.outputs.digest }}
  #         push-to-registry: true

      